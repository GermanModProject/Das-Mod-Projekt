PART
{
// this is a sample config file, for determining a good file format for defining part parameters
// comment line - ignored by cfg parser
// empty lines, or lines without a '=' sign are also ignored
// all other lines are split at the '=' sign, and the left operand is used to know what parameter we are setting
// diferent parameters require data in different formats (see docs), and each module has it's own parameters (again, see docs)
// each assignment must be in a single line. Lines without assignments will be ignored. (You CAN turn on word wrap, though)
// each keyword here relates to an existing variable in the assigned module. If the keyword isn't found, it is ignored.
// conversely, if a keyword is left unassigned (as in not in the file), it will be initialized with it's default value
// This is done automatically, so any public variable defined in the loaded module can be accessed this way (provided it's value can be parsed)


// --- general parameters ---
name = ScienceBox
module = Part
author = ThomasKerman

// --- asset parameters ---
mesh = model.mu
scale = 1
rescaleFactor = 1


// --- node definitions ---
// definition format is Position X, Position Y, Position Z, Up X, Up Y, Up Z
node_stack_top = 0, 0.4, 0, 0, 1, 0, 0
node_stack_bottom = 0, -0.21, 0, 0, 1, 0, 1

// --- FX definitions ---


// --- editor parameters ---
entryCost = 2100
cost = 900
category = Pods
subcategory = 0
title = GSA-ScienceRecovery MainBox
manufacturer = KerbISAT Development GmbK
description =  With the GSA-ScienceRecovery System, you can recover your Experiments without a manned Vehicle.

// attachment rules: stack, srfAttach, allowStack, allowSrfAttach, allowCollision
attachRules = 1,0,1,1,0

// --- standard part parameters ---
mass = 0.7
dragModelType = default
maximum_drag = 0.2
minimum_drag = 0.2
angularDrag = 2
crashTolerance = 30
maxTemp = 5400

MODULE
{
	name = ModuleScienceContainer
	
	reviewActionName = Review Stored Data
	storeActionName = Store Experiments
	evaOnlyStorage = False
	storageRange = 8.3
}
vesselType = Probe


MODULE
{
	name = ModuleCommand
	minimumCrew = 0
	
	RESOURCE
	{
		name = ElectricCharge
		rate = 0.05
	}
}

RESOURCE
{
	name = ElectricCharge
	amount = 200
	maxAmount = 200
}

MODULE
{
	name = ModuleReactionWheel
	
	PitchTorque = 1.5
	YawTorque = 1.5
	RollTorque = 1.5
	
	RESOURCE
	{
		name = ElectricCharge
		rate = 0.15
	}
}

MODULE
{
	name = ModuleSAS
}
}
